{-# START_FILE package.yaml #-}
name:                {{name}}
version:             0.1.0.0
github:              "{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}"
license:             BSD3
author:              "{{author-name}}{{^author-name}}Author name here{{/author-name}}"
maintainer:          "{{author-email}}{{^author-email}}example@example.com{{/author-email}}"
copyright:           "{{copyright}}{{^copyright}}{{year}}{{^year}}2019{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}"

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            {{category}}{{^category}}Web{{/category}}

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme>

ghc-options:
- -Wall
- -Wcompat
- -Wincomplete-record-updates
- -Wincomplete-uni-patterns
- -Wredundant-constraints

dependencies:
- base >= 4.7 && < 5

library:
  source-dirs: src

executables:
  {{name}}-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}
  {{name}}-standalone:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -static -optl-static -optl-pthread -fPIC
    dependencies:
    - {{name}}

tests:
  {{name}}-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}
    - hspec >= 2.7.0

  {{name}}-doctest:
    main:                Spec.hs
    source-dirs:         doctest
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}
    - doctest >= 0.16
    - doctest-discover >= 0.2.0
    - QuickCheck >= 2.13

{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain

{-# START_FILE test/Spec.hs #-}
{-# OPTIONS_GHC -F -pgmF hspec-discover #-}

{-# START_FILE src/Lib.hs #-}
module Lib
    ( someFunc
    ) where

{- |It returns someFunc.

    >>> someFunc
    "someFunc"

    prop> const someFunc x == someFunc
-}
someFunc :: String
someFunc = "someFunc"

{-# START_FILE test/LibSpec.hs #-}
module LibSpec (spec) where

import           Lib
import           Test.Hspec


spec :: Spec
spec =
    describe "someFunc" $
        it "always returns someFunc" $
            someFunc `shouldBe` "someFunc"

{-# START_FILE doctest/Spec.hs #-}
{-# OPTIONS_GHC -F -pgmF doctest-discover #-}

{-# START_FILE app/Main.hs #-}
module Main where

main :: IO ()
main = putStrLn "Hello, {{name}}!"

{-# START_FILE README.md #-}
# {{name}}

{-# START_FILE ChangeLog.md #-}
# Changelog for {{name}}

## Unreleased changes

{-# START_FILE LICENSE #-}
Copyright {{author-name}}{{^author-name}}Author name here{{/author-name}} (c) {{year}}{{^year}}2019{{/year}}

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of {{author-name}}{{^author-name}}Author name here{{/author-name}} nor the names of other
      contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

{-# START_FILE .gitignore #-}
.stack-work/
{{name}}.cabal
bin
*~

{-# START_FILE .travis.yml #-}
language: haskell

{-# START_FILE .hlint.yaml #-}
# HLint configuration file
# https://github.com/ndmitchell/hlint
##########################


# Specify additional command line arguments
#
# - arguments: [--color, --cpp-simple, -XQuasiQuotes]

# Control which extensions/flags/modules/functions can be used
#
# - extensions:
#   - default: false # all extension are banned by default
#   - name: [PatternGuards, ViewPatterns] # only these listed extensions can be used
#   - {name: CPP, within: CrossPlatform} # CPP can only be used in a given module
#
# - flags:
#   - {name: -w, within: []} # -w is allowed nowhere
#
# - modules:
#   - {name: [Data.Set, Data.HashSet], as: Set} # if you import Data.Set qualified, it must be as 'Set'
#   - {name: Control.Arrow, within: []} # Certain modules are banned entirely

- functions:
  - {name: unsafePerformIO, within: []} # unsafePerformIO can only appear in no modules
  - {name: undefined, within: []}
  - {name: error, within: []}
  - {name: errorWithoutStackTrace, within: []}
  - {name: fromJust, within: []}
  - {name: Prelude.head, within: []}
  - {name: Prelude.last, within: []}
  - {name: Prelude.init, within: []}
  - {name: Prelude.tail, within: []}
  - {name: Data.List.head, within: []}
  - {name: Data.List.last, within: []}
  - {name: Data.List.init, within: []}
  - {name: Data.List.tail, within: []}
  - {name: "Prelude.!!", within: []}
  - {name: "Data.List.!!", within: []}

# Add custom hints for this project
#
# Will suggest replacing "wibbleMany [myvar]" with "wibbleOne myvar"
# - error: {lhs: "wibbleMany [x]", rhs: wibbleOne x}

# Turn on hints that are off by default
#
# Ban "module X(module X) where", to require a real export list
# - warn: {name: Use explicit module export list}
#
# Replace a $ b $ c with a . b $ c
- group: {name: dollar, enabled: true}

# Generalise map to fmap, ++ to <>
- group:
    name: generalise
    enabled: true
    rules:
      - warn: {lhs: concat, rhs: Data.Foldable.fold}
      - warn: {lhs: mconcat, rhs: Data.Foldable.fold}
      - warn: {lhs: comcatMap, rhs: foldMap}
      - warn: {lhs: forM, rhs: Data.Traversable.for}
      - warn: {lhs: forM_, rhs: Data.Foldable.for_}
      - warn: {lhs: mapM, rhs: traverse}
      - warn: {lhs: mapM_, rhs: Data.Foldable.traverse_}
      - warn: {lhs: sequence, rhs: sequenceA}
      - warn: {lhs: sequence_, rhs: Data.Foldable.sequenceA_}

# Ignore some builtin hints
# - ignore: {name: Use const, within: SpecialModule} # Only within certain modules

# Define some custom infix operators
# - fixity: infixr 3 ~^#^~

# To generate a suitable file for HLint do:
# $ hlint --default > .hlint.yaml

{-# START_FILE Dockerfile #-}
FROM scratch
COPY ./bin/docker/{{name}}-standalone /
CMD ["./{{name}}-standalone"]

{-# START_FILE docker-build.sh #-}
stack install --docker --local-bin-path=./bin/docker
docker build . -t {{name}}-standalone
