{-# START_FILE package.yaml #-}
name:                {{name}}
version:             0.1.0
github:              "{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}"
license:             BSD3
author:              "{{author-name}}{{^author-name}}Author name here{{/author-name}}"
maintainer:          "{{author-email}}{{^author-email}}example@example.com{{/author-email}}"
copyright:           "{{copyright}}{{^copyright}}{{year}}{{^year}}2019{{/year}} {{author-name}}{{^author-name}}Author name here{{/author-name}}{{/copyright}}"

extra-source-files:
- .gitignore
- LICENSE
- README.md
- package.yaml
- stack.yaml

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            {{category}}{{^category}}Web{{/category}}

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/{{github-username}}{{^github-username}}githubuser{{/github-username}}/{{name}}#readme>

dependencies:
- base >= 4.10 && < 5
- mtl
- rio

library:
  source-dirs: src

executables:
  {{name}}-exe:
    main:                Main.hs
    source-dirs:         app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}
    default-extensions:
    - NoImplicitPrelude

tests:
  {{name}}-test:
    main:                Spec.hs
    source-dirs:         test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}
    - hspec >= 2.7.0
    default-extensions:
    - NoImplicitPrelude

  {{name}}-doctest:
    main:                Spec.hs
    source-dirs:         doctest
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - {{name}}
    - doctest >= 0.16
    - doctest-discover >= 0.2.0
    - QuickCheck >= 2.13

ghc-options:
  - -Wall
  - -Wcompat
  - -Wincomplete-record-updates
  - -Wincomplete-uni-patterns
  - -Wredundant-constraints

default-extensions:
  - BangPatterns
  - BinaryLiterals
  - ConstraintKinds
  - DataKinds
  - DefaultSignatures
  - DeriveDataTypeable
  - DeriveFoldable
  - DeriveFunctor
  - DeriveGeneric
  - DeriveTraversable
  - DoAndIfThenElse
  - EmptyDataDecls
  - ExistentialQuantification
  - FlexibleContexts
  - FlexibleInstances
  - FunctionalDependencies
  - GADTs
  - GeneralizedNewtypeDeriving
  - InstanceSigs
  - KindSignatures
  - LambdaCase
  - MultiParamTypeClasses
  - MultiWayIf
  - NamedFieldPuns
  - OverloadedStrings
  - PartialTypeSignatures
  - PatternGuards
  - PolyKinds
  - RankNTypes
  - RecordWildCards
  - ScopedTypeVariables
  - StandaloneDeriving
  - TupleSections
  - TypeFamilies
  - TypeSynonymInstances
  - ViewPatterns

{-# START_FILE Setup.hs #-}
import Distribution.Simple
main = defaultMain

{-# START_FILE test/Spec.hs #-}
{-# OPTIONS_GHC -F -pgmF hspec-discover #-}

{-# START_FILE src/Lib.hs #-}
module Lib
    ( someFunc
    ) where

import           RIO

{- $setup
>>> :set -XOverloadedStrings
>>> import Control.Monad
-}

{- |It returns someFunc.
>>> someFunc
"someFunc"

prop> const someFunc x == someFunc

>>> :{
let sth = join
            [ "Hello"
            , ", "
            , "World"
            ]
    in const someFunc sth
:}
"someFunc"
-}
someFunc :: String
someFunc = "someFunc"

{-# START_FILE test/LibSpec.hs #-}
module LibSpec (spec) where

import           Lib
import           RIO
import           Test.Hspec


spec :: Spec
spec =
    describe "someFunc" $
        it "always returns someFunc" $
            someFunc `shouldBe` "someFunc"

{-# START_FILE doctest/Spec.hs #-}
{-# OPTIONS_GHC -F -pgmF doctest-discover -optF doctest-config.json #-}

{-# START_FILE doctest-config.json #-}
{
    "doctestOptions": [
        "-XOverloadedStrings",
        "-XBangPatterns",
        "-XBinaryLiterals",
        "-XConstraintKinds",
        "-XDataKinds",
        "-XDefaultSignatures",
        "-XDeriveDataTypeable",
        "-XDeriveFoldable",
        "-XDeriveFunctor",
        "-XDeriveGeneric",
        "-XDeriveTraversable",
        "-XDoAndIfThenElse",
        "-XEmptyDataDecls",
        "-XExistentialQuantification",
        "-XFlexibleContexts",
        "-XFlexibleInstances",
        "-XFunctionalDependencies",
        "-XGADTs",
        "-XGeneralizedNewtypeDeriving",
        "-XInstanceSigs",
        "-XKindSignatures",
        "-XLambdaCase",
        "-XMultiParamTypeClasses",
        "-XMultiWayIf",
        "-XNamedFieldPuns",
        "-XOverloadedStrings",
        "-XPartialTypeSignatures",
        "-XPatternGuards",
        "-XPolyKinds",
        "-XRankNTypes",
        "-XRecordWildCards",
        "-XScopedTypeVariables",
        "-XStandaloneDeriving",
        "-XTupleSections",
        "-XTypeFamilies",
        "-XTypeSynonymInstances",
        "-XViewPatterns"
    ]
}

{-# START_FILE app/Main.hs #-}
module Main where

import           Control.Monad.Cont
import           RIO

data Env = Env
    { envLogFunc :: LogFunc
    }

instance HasLogFunc Env where
    logFuncL = lens envLogFunc $ \x y -> x { envLogFunc = y }

main :: IO ()
main =
    flip runContT return $ do
        logFunc <- logOptionsHandle stderr False >>= ContT . withLogFunc
        let env = Env logFunc
        runRIO env $
            logInfo "Hello, {{name}}!"

{-# START_FILE README.md #-}
# {{name}}

{-# START_FILE LICENSE #-}
Copyright {{author-name}}{{^author-name}}Author name here{{/author-name}} (c) {{year}}{{^year}}2019{{/year}}

All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.

    * Redistributions in binary form must reproduce the above
      copyright notice, this list of conditions and the following
      disclaimer in the documentation and/or other materials provided
      with the distribution.

    * Neither the name of {{author-name}}{{^author-name}}Author name here{{/author-name}} nor the names of other
      contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

{-# START_FILE .gitignore #-}
.stack-work/
{{name}}.cabal
*~

{-# START_FILE .github/workflows/haskell.yml #-}
{{=<% %>=}}
name: test
on: push

jobs:
  test:
    name: ghc ${{ matrix.scenario.ghc }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        scenario:
          - ghc: 8.10.5
          - ghc: 9.0.1
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.stack
          key: ${{ runner.os }}-stack-${{ matrix.scenario.ghc }}-${{ hashFiles('stack.yaml.lock') }}
      - name: Setup Haskell
        uses: haskell/actions/setup@v1
        id: cabal-setup-haskell
        with:
          ghc-version: ${{ matrix.scenario.ghc }}
          enable-stack: true
      - name: Prepare
        run: |-
          set -ex
          rm -f stack.yaml.lock
          stack clean
      - name: Install dependencies
        run: stack test  --bench --no-terminal --system-ghc --only-dependencies
      - name: Build
        run: stack build --bench --no-terminal --system-ghc --haddock --no-haddock-deps
      - name: Test
        run: stack test  --bench --no-terminal --system-ghc --haddock --no-haddock-deps --no-run-benchmarks
<%={{ }}=%>
